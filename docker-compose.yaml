# Do not edit this file, or do... whatever honestly its your environment. Who am I to tell you what to do?
# This bridge can be visualized as below. Note that this illustration does not include
# the triggers or broker, only a high level of what is happening.

# ┌───────────┐   ┌───────────┐    ┌───────────┐    ┌───────────┐
# │ Defender  │   │           │    │           │    │           │
# │ Events    ├──►│Transform  ├───►│Sentinel   ├───►│Splunk     │
# │           │   │           │    │           │    │           │
# └───────────┘   └───────────┘    └───────────┘    └───────────┘
# ┌───────────┐   ┌───────────┐    ┌───────────┐    ┌───────────┐
# │ CloudGuard│   │           │    │           │    │           │
# │ Events    ├──►│Transform  ├───►│Sentinel   ├───►│Splunk     │
# │           │   │           │    │           │    │           │
# └───────────┘   └───────────┘    └───────────┘    └───────────┘
# ┌───────────┐   ┌───────────┐    ┌───────────┐    ┌───────────┐
# │ Aquasec   │   │           │    │           │    │           │
# │ Events    ├──►│Transform  ├───►│Sentinel   ├───►│Splunk     │
# │           │   │           │    │           │    │           │
# └───────────┘   └───────────┘    └───────────┘    └───────────┘


services:
# Source(s) of events
  # oracle-event-gen generates synthetic CloudGuard events.
  oracle-event-gen:
    image: gcr.io/triggermesh/csnfeventgen@sha256:1ebee0299af4e660d898781678d6f20dce489e832548a217d7c6d7599d3fee63
    command: Oracle http://oracle-cloudguard-transformation:8080
    links:
      - oracle-cloudguard-transformation
  # aquasec-event-gen generates synthetic Aquasec events.
  aquasec-event-gen:
    image: gcr.io/triggermesh/csnfeventgen@sha256:1ebee0299af4e660d898781678d6f20dce489e832548a217d7c6d7599d3fee63
    command: Aquasec http://aquasec-transformation:8080
    links:
      - aquasec-transformation
  # azure-event-gen generates synthetic Azure Sentinel events.
  azure-event-gen:
    image: gcr.io/triggermesh/csnfeventgen@sha256:1ebee0299af4e660d898781678d6f20dce489e832548a217d7c6d7599d3fee63
    command: Azure http://azure-defender-transformation:8080
    links:
      - azure-defender-transformation
  # http-source exposes a HTTP endpoint that can be used to generate events.
  http-source:
    image: gcr.io/triggermesh/httpsource-adapter@sha256:926e9aeff89c7e9a753ccb754beddbf5f250474634f5853143b3afd5da70bebb
    environment:
      K_METRICS_CONFIG: '{}'
      K_LOGGING_CONFIG: '{}'
      NAMESPACE: default
      K_SINK: http://${WEBHOOK_EVENT_TYPE}:8080
      HTTP_EVENT_TYPE: "http"
      HTTP_EVENT_SOURCE: "http-source"
    ports:
      - "8080:8080"
    expose:
      - "80"
      - "8080"
    links:
      - ${WEBHOOK_EVENT_TYPE}

# Transformations

  # azure-defender-transformation is a service that transforms Azure Defender events into the CSNF CDM format.
  azure-defender-transformation:
    image: gcr.io/triggermesh/azuredefendertransformation
    environment:
      K_SINK: http://event-splitter:8080
    expose:
      - "8080"
    links:
      - event-splitter

  # oracle-cloudguard-transformation
  oracle-cloudguard-transformation:
    image: gcr.io/triggermesh/ocgtransformation
    environment:
      K_SINK: http://event-splitter:8080
    expose:
      - "8080"
    links:
      - event-splitter

  # aquasec-transformation
  aquasec-transformation:
    image: gcr.io/triggermesh/aquasectransformation
    environment:
      K_SINK: http://event-splitter:8080
    expose:
      - "8080"
    links:
      - event-splitter

# Routing

  # event-splitter allows us to send the event to multiple Targets.
  event-splitter:
    image: gcr.io/triggermesh/splitter@sha256:d98ff0895acb16f6e0dd9d123be9b6f547cc177f60848db583f529beb2819cf4
    environment:
      K_SINK: http://splunk-target:8080
      K_SINK2: http://azure-sentinel-target:8080
    links:
      - azure-sentinel-target
      - splunk-target

# Targets/Sinks

  # azure-sentinel-target is an Azure Sentinel Target
  azure-sentinel-target:
    image: gcr.io/triggermesh/azuresentineltarget:latest
    environment:
      NAMESPACE: default     # required due to knative
      K_METRICS_CONFIG: '{}' # required due to knative
      K_LOGGING_CONFIG: '{}' # required due to knative
      AZURE_SUBSCRIPTION_ID: ${AZURE_SUBSCRIPTION_ID}
      AZURE_TENANT_ID: ${AZURE_TENANT_ID}
      AZURE_CLIENT_ID: ${AZURE_CLIENT_ID}
      AZURE_CLIENT_SECRET: ${AZURE_CLIENT_SECRET}
      AZURE_RESOURCE_GROUP: sent
      AZURE_WORKSPACE: sent

  # splunk-target is a Splunk Target
  splunk-target:
    image: gcr.io/triggermesh/splunktarget-adapter:latest
    environment:
      NAMESPACE: default     # required due to knative
      K_METRICS_CONFIG: '{}' # required due to knative
      K_LOGGING_CONFIG: '{}' # required due to knative
      SPLUNK_HEC_ENDPOINT: https://splunk:8088/services/collector/event
      SPLUNK_HEC_TOKEN: "123456789"
      # SPLUNK_INDEX:
      SPLUNK_SKIP_TLS_VERIFY: true
    expose:
      - "8080:8080"
      - "8088"
    links:
      - splunk

# Services
  # splunk is an instance of Splunk.
#   curl -k https://localhost:8088/services/collector/event -H "Authorization: Splunk 123456789" -d '{"event": "hello world"}'
  splunk:
    image: ${SPLUNK_IMAGE:-splunk/splunk:latest}
    container_name: splunk-service
    environment:
      - SPLUNK_START_ARGS=--accept-license
      - SPLUNK_HEC_TOKEN=123456789
      - SPLUNK_PASSWORD=admin1234
    ports:
      - 8000:8000
      - 8088:8088
